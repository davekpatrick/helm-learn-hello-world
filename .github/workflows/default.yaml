name: default
run-name: Continuous Integration
on:
  push:
#    branches-ignore:    
#      - main
  pull_request:
jobs:
  # --------------------------------------------
  build:
    name: Artifact build
    strategy:
      matrix:
        operatingSystem: [ubuntu-24.04]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: azure/setup-helm@v4
      with:
        version: 'latest'
    - name: Locate updated Files
      id: updated-files
      run: |
        cd helm 
        # Get the list of files that have changed
        updatedFilesList=$( git diff-tree --relative --no-commit-id --name-only -r ${{ github.sha }} )
        if [ -z "$updatedFilesList" ]; then
          updatedFilesNum=0
          echo "No files have changed"
          exit 0
        else
          updatedFilesNum=$( echo "$updatedFilesList" | wc -l )
          echo "Number of updated Files: $updatedFilesNum"
          #
          if [ $ACTIONS_STEP_DEBUG ]; then
            echo "Updated Files List"
            echo "--------------------------"
            echo "$updatedFilesList"
            echo "--------------------------"
          fi
          # Set the output variables
          echo "UPDATED_FILES_COUNT=$( echo $updatedFilesNum )" >> "$GITHUB_OUTPUT"
          echo "UPDATED_FILES_LIST=$( echo $updatedFilesList )" >> "$GITHUB_OUTPUT"
        fi
    - name: Locate updated charts
      id: updated-charts
      if: steps.updated-files.outputs.UPDATED_FILES_COUNT != 0
      run: |
        cd helm 
        updatedChartsList=$( echo "${{ steps.updated-files.outputs.UPDATED_FILES_LIST }}" | grep 'Chart.yaml' | sed -e 's/\/Chart.yaml//' )
        echo "Number of updated charts: $( echo $updatedChartsList | wc -w )"
        echo $updatedChartsList
        #
        updatedNonChartFiles=$( echo "${{ steps.updated-files.outputs.UPDATED_FILES_LIST }}" | grep -v 'Chart.yaml' )
        echo "Number of updated non-chart files: $( echo $updatedNonChartFiles | wc -w )"
        echo $updatedNonChartFiles
        #
        updatedDirs=$( echo "${{ steps.updated-files.outputs.UPDATED_FILES_LIST }}" | grep -v 'Chart.yaml' | xargs -n1 dirname | sort -u )
        echo "Number of updated directories: $( echo $updatedDirs | wc -w )"
        echo $updatedDirs
    - name: Helm Chart
      if: steps.updated-charts.outputs.UPDATED_CHARTS_COUNT != 0
      run: |
        cd helm 
        # List of charts that have changed
        echo ${{ steps.updated-charts.outputs.UPDATED_CHARTS_LIST }}
        # Lint all charts
        for chart in ${{ steps.updated-charts.outputs.UPDATED_CHARTS_LIST }}; do
          echo "chart:[${chart}]"
          # 
          helm show chart ${chart} | grep -E "^version:" | awk '{print $2}'
          helm lint ${chart}
        done